getwd()
getwd()
library(dplyr)
mtcars
mtcars %>% select(mpg)
mtcars %>% select(mpg) %>% summarise(m = mean)
mtcars %>% select(mpg) %>% summarise(m = mean(mpg))
install.packages("httpr")
install.packages(c("httr", "jsonlite"))
scrape_url <- "https://en.wikipedia.org/wiki/Golden_Retriever"
library(httr)
flat_html <- readLines(con = url)
flat_html <- readLines(con = scrape_url)
head(flat_html)
flat_html <- readLines(con = scrape_url, encoding = 'utf-8')
install.packages("XML")
library(XML)
install.packages("XML")
install.packages("XML2")
install.packages("xml2")
install.packages("xml")
install.packages("XML")
install.packages("xml2-config")
install.packages('XML')
install.packages('lubridate')
library(lubridate)
install.packages('XML')
install.packages('XML')
parsed_wiki <- XML::htmlParse(flat_html)
parsed_wiki
library(XML)
htmlTreeParse(parsed_wiki)
htmlTreeParse(flat_html)
parsed_wiki <- htmlTreeParse(file = flat_html)
View(parsed_wiki)
getHTMLLinks(parsed_wiki)
parsed_wiki <- XML::htmlParse(flat_html)
getHTMLLinks(parsed_wiki)
len(getHTMLLinks(parsed_wiki))
length(getHTMLLinks(parsed_wiki))
length(unique(getHTMLLinks(parsed_wiki)))
names(readHTMLTable(flat_html))
readHTMLTable(flat_html)
readHTMLTable(flat_html)[1]
readHTMLTable(flat_html)[[1]]
as.data.frame(readHTMLTable(flat_html)[[1]])
quit()
cov_deu <- cov_dat ## %>% filter(iso_code == "DEU" | iso_code == "FRA")
ls
data <- read.table(file = "data/activity.csv", sep = ",", header = TRUE)
summary(data)
str(data)
data <- read.table(file = "data/activity.csv", sep = ",", header = TRUE, na.strings = "")
str(data)
data <- read.table(file = "data/activity.csv", sep = ",", header = TRUE)
str(data)
data.date <- as.POSIXct.Date(data.date)
data.date <- as.POSIXct(data.date)
datadate <- as.POSIXct(data$date)
data$date <- as.POSIXct(data$date)
View(data)
plot(steps)
plot(data$steps)
hist(data$steps)
?tapply
tapply(X = data$steps, INDEX = data$interval, sum)
tapply(X = data$steps, INDEX = data$interval, mean)
tapply(X = data$steps, INDEX = data$interval, mean, na.rm = T)
library(dplyr)
data %>% group_by(date) %>% summarise(steps = sum(steps))
data %>% group_by(date) %>% summarise(steps = sum(steps, na.rm = T))
data %>% group_by(date) %>% summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm))
data %>% group_by(date) %>% summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T))
data %>% group_by(date) %>% summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm = T))
data %>% group_by(date) %>% summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = med(steps, na.rm = T))
data %>% group_by(date) %>% summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm = T))
data %>% group_by(date) %>% summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps))
data %>% group_by(date) %>% summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm=T))
install.packages()
install.packages("xtable")
libary(xtable)
library(xtable)
library(dplyr)
library(xtable)
data <- read.table(file = "data/activity.csv", sep = ",", header = TRUE)
steps_df <- data %>%
group_by(date) %>%
summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm=T))
xtable(steps_df)
mean(steps_df$steps_sum)
median(steps_df$steps_sum)
hist(steps_df$steps_sum)
steps_df_int <- data %>%
group_by(interval) %>%
summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm=T))
View(steps_df_int)
plot(steps_df_int)
plot(steps_df_int$steps_mean, steps_df_int$interval)
plot(steps_df_int$steps_mean, x= steps_df_int$interval)
plot(steps_df_int$steps_mean, x= steps_df_int$interval, type="1")
plot(steps_df_int$steps_mean, x= steps_df_int$interval)
steps_df_int[steps_df_int$steps_mean == max(steps_df_int$steps_mean),]
max.col(m = steps_df_int)
library(dplyr)
library(xtable)
data <- read.table(file = "data/activity.csv", sep = ",", header = TRUE)
steps_df_day <- data %>%
group_by(date) %>%
summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm=T))
print(steps_df_day, n= nrow(steps_df_day))
steps_df_int <- data %>%
group_by(interval) %>%
summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm=T))
plot(steps_df_int$steps_mean, x= steps_df_int$interval)
steps_df_int[steps_df_int$steps_mean == max(steps_df_int$steps_mean),1]
steps_df_int <- data %>%
group_by(interval) %>%
summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm=T))
plot(steps_df_int$steps_mean, x= steps_df_int$interval)
print(steps_df_int[steps_df_int$steps_mean == max(steps_df_int$steps_mean),1])
steps_df_int <- data %>%
group_by(interval) %>%
summarise(steps_sum = sum(steps, na.rm = T), steps_mean = mean(steps, na.rm=T), steps_med = median(steps, na.rm=T))
plot(steps_df_int$steps_mean, x= steps_df_int$interval)
test <- steps_df_int[steps_df_int$steps_mean == max(steps_df_int$steps_mean),1]
View(steps_df_day)
?lm.fit
?glm
is.na(data)
data[is.na(data)]
is.na(data)
is.na(data$date)
mean(is.na(data$date))
mean(is.na(data$interval))
mean(is.na(data$steps))
tapply(data$steps, data$interval, mean)
for(i in data$steps){print(i)}
data[is.na(data$steps)]
data[is.na(data$steps),]
for(i in data){print(i)}
for(i in data){print(i$date)}
for(i in data){print(i[["date"]])}
for(i in data){print(i["date"])}
for(i in data){print(ncol(i))}
for(i in data){print(i)}
sapply(data, function(x) is.na(x[[1]]))
sapply(data, function(x) names(x))
$mutate_all
?mutate_all
library(dplyr)
?mutate_all
?across
across(data$steps)
mutate(across(data$steps))
mutate_if(data$steps, is.na(data$steps), mean)
?ifelse
ifelse(is.na(data$steps, "yes", "no"))
ifelse(is.na(data$steps), "yes", "no")
table(ifelse(is.na(data$steps), "yes", "no"))
lapply(data, function(x) ifelse(is.na(x[[1]]), mean(data$steps[data$date == x[[2]]],)))
lapply(data, function(x) ifelse(is.na(x[[1]]), mean(data$steps[data$date == x[[2]]],),x))
lapply(data, function(x) ifelse(is.na(x[[1]]), mean(data$steps[data$date == x[[2]],],na.rm = T),x))
lapply(data, function(x) ifelse(is.na(x[[1]]), mean(data$steps[data$date == x[[2]]],na.rm = T),x))
sapply(data, function(x) ifelse(is.na(x[[1]]), mean(data$steps[data$date == x[[2]]],na.rm = T),x))
sapply(data$steps, function(x) ifelse(is.na(x[[1]]), mean(data$steps[data$date == x[[2]]],na.rm = T),x))
sapply(data, function(x) ifelse(is.na(x[[1]]), mean(data$steps[data$date == x[[2]]],na.rm = T),x))
?sapply
?apply
for(i in data){
test <- c()
test.append(ifelse(is.na(i[[1]]), mean(data$steps[data$date == i[[2]]]),i[[1]]))
}
for(i in data){
test <- c()
append(test, ifelse(is.na(i[[1]]), mean(data$steps[data$date == i[[2]]]),i[[1]]))
}
for(i in data){
test <- c()
ifelse(is.na(i[[1]]), print(mean(data$steps[data$date == i[[2]]])),print(i[[1]]))
}
for(i in data){print(i)}
for(i in data){print(i[[1]])}
for(i in data){print(i[[2]])}
for(i in data){print(i[1,])}
for(i in data){print(i[1])}
for(i in data){print("a", i)}
for(i in data){print(paste("a", i))}
for(i in data){print(paste("a", name(i))}
for(i in data){print(paste("a", name(i)))}
for(i in data){print(paste("a", names(i)))}
for(i in data){print(paste("a", i))}
for(i in data){print(i)}
for(i in data){print(i[2])}
for(i in data){print(i[3])}
for(i in data){print(i[20])}
for(i in data){print(i[1][20])}
for(i in data){print(i[1m])}
for(i in data){print(i[1,])}
for(i in data){print(i[1][])}
for(i in data){print(i[1][@])}
for(i in data){print(i[1][2])}
sapply(data, function(x) print(x))
sapply(data, function(x) print(x[2]))
sapply(data, function(x) print(x[][2]))
sapply(data, function(x) print(x[][2][2]))
sapply(data, function(x) print(x[[2]]))
sapply(data, function(x) print(names(x)))
class(data)
case_when()
?lapply
lapply(data, function(x) print(x))
lapply(data, function(x) print(names(x)))
?apply
apply(data, 1, print)
apply(data, 1, is.na)
apply(data, 1, names(x))
apply(data, 1, names
)
apply(data, 1, function(x) names(x))
nrow(data)
apply(head(data), 1, function(x) names(x))
apply(head(data, 20), 1, function(x) x$steps)
apply(head(data, 20), 1, function(x) x["steps"])
apply(head(data, 20), 1, function(x) x["date"])
apply(data,1, function(x) ifelse(is.na(x["steps"]), mean(data$steps[data$date == x['date']]),x['steps']))
apply(data,1, function(x) ifelse(is.na(x["steps"]), mean(data$steps[data$date == x['date']], na.rm = T),x['steps']))
apply(data,1, function(x) ifelse(is.na(x["steps"]), mean(data$steps[data$date == x['date']], na.rm = T),x['steps']))
apply(data,1, function(x) ifelse(is.na(x["steps"]), 'test', na.rm = T),x['steps']))
apply(data,1, function(x) ifelse(is.na(x["steps"]), 'test', na.rm = T),x['steps'])
apply(data,1, function(x) ifelse(is.na(x["steps"]), 'test',x['steps'])
)
apply(data,1, function(x) mean(data$steps[data$date == x['date']], na.rm = T))
mean(data$steps, na.rm = T)
apply(data,1, function(x) print(data$steps[data$date == x['date']]))
apply(data,1, function(x) print(head(data$steps[data$date == x['date']])))
apply(data,1, function(x) print(head(data$steps[data$date == "2012-10-01"])))
print(head(data$steps[data$date == "2012-10-01"]))
print(head(data$steps[data$date == "2012-10-21"]))
print(mean(data$steps[data$date == "2012-10-21"], na.rm = T))
print(mean(data$steps[data$date == "2012-10-01"], na.rm = T))
apply(data,1, function(x) mean(data$steps[data$interval == x['interval']], na.rm = T))
apply(data,1, function(x) median(data$steps[data$interval == x['interval']], na.rm = T))
apply(data,1, function(x) ifelse(is.na(x['steps']), mean(data$steps[data$interval == x['interval']], na.rm = T), x['steps']))
mean(is.nan(apply(data,1, function(x) ifelse(is.na(x['steps']), mean(data$steps[data$interval == x['interval']], na.rm = T), x['steps']))))
mean(is.na(apply(data,1, function(x) ifelse(is.na(x['steps']), mean(data$steps[data$interval == x['interval']], na.rm = T), x['steps']))))
data2 <- data
data2$steps <- apply(data,1, function(x) ifelse(is.na(x['steps']), mean(data$steps[data$interval == x['interval']], na.rm = T), x['steps']))
View(data2)
data2$steps <- apply(data,1, function(x) ifelse(is.na(x['steps']), steps_df_int$steps_mean[steps_df_int$interval == x['interval']], x['steps']))
View(data2)
